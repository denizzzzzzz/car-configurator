{"ast":null,"code":"export let NormalEngines = /*#__PURE__*/function (NormalEngines) {\n  NormalEngines[\"petrol\"] = \"Petrol\";\n  NormalEngines[\"hybrid\"] = \"Hybrid\";\n  return NormalEngines;\n}({});\nexport let SportsEngines = /*#__PURE__*/function (SportsEngines) {\n  SportsEngines[\"petrol\"] = \"Petrol\";\n  SportsEngines[\"hybrid\"] = \"Hybrid\";\n  SportsEngines[\"diesel\"] = \"Diesel\";\n  return SportsEngines;\n}({});\nexport let GenericEngines = /*#__PURE__*/function (GenericEngines) {\n  GenericEngines[\"petrol\"] = \"Petrol\";\n  GenericEngines[\"hybrid\"] = \"Hybrid\";\n  GenericEngines[\"diesel\"] = \"Diesel\";\n  GenericEngines[\"electric\"] = \"Electric\";\n  return GenericEngines;\n}({});\nexport class NormalCar {\n  constructor() {\n    this.engineType = void 0;\n  }\n}\nexport let CarColorNormal = /*#__PURE__*/function (CarColorNormal) {\n  CarColorNormal[\"Black\"] = \"Black\";\n  CarColorNormal[\"Red\"] = \"Red\";\n  CarColorNormal[\"Blue\"] = \"Blue\";\n  return CarColorNormal;\n}({});\nexport let CarColorSports = /*#__PURE__*/function (CarColorSports) {\n  CarColorSports[\"DelftBlue\"] = \"Delft Blue\";\n  CarColorSports[\"Eureolin\"] = \"Eureolin\";\n  CarColorSports[\"PigmentGreen\"] = \"Pigment Green\";\n  CarColorSports[\"SunGlow\"] = \"Sunglow\";\n  CarColorSports[\"Blue\"] = \"Blue\";\n  CarColorSports[\"Red\"] = \"Red\";\n  return CarColorSports;\n}({});\nexport const colorMapNormal = {\n  [CarColorNormal.Black]: {\n    name: \"Black\",\n    hex: \"Black\",\n    color: \"white\"\n  },\n  [CarColorNormal.Blue]: {\n    name: \"Blue\",\n    hex: \"Blue\",\n    color: \"White\"\n  },\n  [CarColorNormal.Red]: {\n    name: \"Red\",\n    hex: \"Red\",\n    color: \"white\"\n  }\n};\nexport const colorMapSports = {\n  [CarColorSports.DelftBlue]: {\n    name: \"Delft Blue\",\n    hex: \"#29335C\",\n    color: \"white\"\n  },\n  [CarColorSports.Eureolin]: {\n    name: \"Eureolin\",\n    hex: \"#EEE82C\",\n    color: \"black\"\n  },\n  [CarColorSports.PigmentGreen]: {\n    name: \"Eureolin\",\n    hex: \"#53A548\",\n    color: \"White\"\n  },\n  [CarColorSports.SunGlow]: {\n    name: \"SunGlow\",\n    hex: \"#FFC857\",\n    color: \"black\"\n  },\n  [CarColorSports.Red]: {\n    name: \"Red\",\n    hex: \"Red\",\n    color: \"White\"\n  },\n  [CarColorSports.Blue]: {\n    name: \"Blue\",\n    hex: \"Blue\",\n    color: \"white\"\n  }\n};\nexport let SportsDoorTypes = /*#__PURE__*/function (SportsDoorTypes) {\n  SportsDoorTypes[\"Normaldoor\"] = \"Normal door\";\n  SportsDoorTypes[\"Scissordoor\"] = \"Scissor door\";\n  SportsDoorTypes[\"Gulwigdoor\"] = \"Gulwig door\";\n  return SportsDoorTypes;\n}({});\nexport let LuxeDoorTypes = /*#__PURE__*/function (LuxeDoorTypes) {\n  LuxeDoorTypes[\"Normaldoor\"] = \"Normal door\";\n  LuxeDoorTypes[\"Suicidedoor\"] = \"Suicide door\";\n  return LuxeDoorTypes;\n}({});\nexport let NormalWindows = /*#__PURE__*/function (NormalWindows) {\n  NormalWindows[\"Normal\"] = \"Normal windows\";\n  NormalWindows[\"Automatic\"] = \"Automatic windows\";\n  return NormalWindows;\n}({});\nexport let NormalTires = /*#__PURE__*/function (NormalTires) {\n  NormalTires[\"Michelin\"] = \"Michelin\";\n  NormalTires[\"Bridgestone\"] = \"Bridgestone\";\n  return NormalTires;\n}({});\nexport let NormalRims = /*#__PURE__*/function (NormalRims) {\n  NormalRims[\"Silver\"] = \"Silver\";\n  NormalRims[\"Aluminium\"] = \"Alimunium\";\n  return NormalRims;\n}({});\n// public abstract revEngine(): void;\n\n// export class DieselEngine extends AbstractEngine {\n//     public engineType: EngineTypes = EngineTypes.diesel; \n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('GULP');\n// }\n\n// export class PetrolEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.PETROL;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n//     public revEngine(): void {\n//         console.log('Vroom');\n//     }\n// }\n\n// export class HybridEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('Zoof');\n// }\n// }\n\n// export class ElectricEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('...');\n// }\n\nexport class AbstractDoor {\n  constructor() {\n    this.color = void 0;\n  }\n}\nexport class FamilyCarDoor extends AbstractDoor {\n  constructor(color) {\n    super();\n    this.color = color;\n  }\n  setColor(color) {\n    this.color = color;\n  }\n}\nexport class AbstractWindow {}\n\n// export abstract class AbstractCar {\n//     public abstract getEngine(): AbstractEngine|null;\n//     public abstract setEngine(engine: AbstractEngine): void;\n//     public abstract changeEngine(engine: AbstractEngine): void;\n// }\n\n// export class FamilyCar extends AbstractCar {\n//     private engine: AbstractEngine|null = null;\n//     private doors: FamilyCarDoor[] = [];\n\n//     public setEngine(engine: AbstractEngine): void {\n//         this.engine = engine;\n//     }\n//     public getEngine(): AbstractEngine|null {\n//         return this.engine;\n//     }\n//     public changeEngine(engine: AbstractEngine): void {\n//         this.engine = engine;\n//     }\n// }\n// export const instance = new FamilyCar(new DieselEngine(2000), [new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\") ,new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\")]);\n// instance.getEngine().revEngine();\n\n// instance.changeEngine(new HybridEngine(2000));\n// instance.getEngine().revEngine();\n\n// [Selecteer auto type] -> [Motor type] -> [Deur type]","map":{"version":3,"names":["NormalEngines","SportsEngines","GenericEngines","NormalCar","constructor","engineType","CarColorNormal","CarColorSports","colorMapNormal","Black","name","hex","color","Blue","Red","colorMapSports","DelftBlue","Eureolin","PigmentGreen","SunGlow","SportsDoorTypes","LuxeDoorTypes","NormalWindows","NormalTires","NormalRims","AbstractDoor","FamilyCarDoor","setColor","AbstractWindow"],"sources":["/Users/deniz/Desktop/Oefen projecten TS/autoconfigurator/car-configurator/src/models/index.ts"],"sourcesContent":["export enum NormalEngines {\n    petrol = \"Petrol\",\n    hybrid = \"Hybrid\",\n}\nexport enum SportsEngines {\n    petrol = \"Petrol\",\n    hybrid = \"Hybrid\",\n    diesel = \"Diesel\",\n}\nexport enum GenericEngines {\n    petrol = \"Petrol\",\n    hybrid = \"Hybrid\",\n    diesel = \"Diesel\",\n    electric = \"Electric\"\n}\nexport abstract class NormalCar {\n    public abstract engineType: NormalEngines;\n}\nexport interface ColorInfo {\n    name: string;\n    hex: string;\n    color:string;\n  }\n  export enum CarColorNormal {\n    Black = \"Black\", \n    Red = \"Red\",\n    Blue = \"Blue\",\n  }\n  export enum CarColorSports {\n    DelftBlue = \"Delft Blue\",\n    Eureolin = \"Eureolin\",\n    PigmentGreen = \"Pigment Green\",\n    SunGlow = \"Sunglow\",\n    Blue =\"Blue\",\n    Red = \"Red\"\n  }\n\n  export const colorMapNormal: Record<CarColorNormal, ColorInfo> = {\n    [CarColorNormal.Black]: { name: \"Black\", hex: \"Black\", color:\"white\" },\n    [CarColorNormal.Blue]: { name: \"Blue\", hex: \"Blue\", color:\"White\" },\n    [CarColorNormal.Red]: { name: \"Red\", hex: \"Red\", color:\"white\" },\n  };\n  export const colorMapSports: Record<CarColorSports, ColorInfo> = {\n    [CarColorSports.DelftBlue]: { name: \"Delft Blue\", hex: \"#29335C\", color:\"white\" },\n    [CarColorSports.Eureolin]: { name: \"Eureolin\", hex: \"#EEE82C\", color:\"black\" },\n    [CarColorSports.PigmentGreen]: { name: \"Eureolin\", hex: \"#53A548\", color:\"White\" },\n    [CarColorSports.SunGlow]: { name: \"SunGlow\", hex: \"#FFC857\", color:\"black\" },\n    [CarColorSports.Red]: { name: \"Red\", hex: \"Red\", color:\"White\" },\n    [CarColorSports.Blue]: { name: \"Blue\", hex: \"Blue\", color:\"white\" },\n}\n  \nexport enum SportsDoorTypes {\n    Normaldoor =\"Normal door\",\n    Scissordoor =\"Scissor door\",\n    Gulwigdoor =\"Gulwig door\",\n}\n\nexport enum LuxeDoorTypes {\n    Normaldoor =\"Normal door\",\n    Suicidedoor =\"Suicide door\",\n}\n\nexport enum NormalWindows {\n    Normal = \"Normal windows\",\n    Automatic = \"Automatic windows\"\n}\nexport enum NormalTires {\n    Michelin =\"Michelin\",\n    Bridgestone =\"Bridgestone\"\n}\nexport enum NormalRims{\n    Silver = \"Silver\",\n    Aluminium = \"Alimunium\"\n}\n    // public abstract revEngine(): void;\n\n\n\n// export class DieselEngine extends AbstractEngine {\n//     public engineType: EngineTypes = EngineTypes.diesel; \n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('GULP');\n    // }\n\n\n// export class PetrolEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.PETROL;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n//     public revEngine(): void {\n//         console.log('Vroom');\n//     }\n// }\n\n// export class HybridEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('Zoof');\n    // }\n// }\n\n// export class ElectricEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('...');\n    // }\n\nexport abstract class AbstractDoor {\n    public abstract color: string;\n}\n\nexport class FamilyCarDoor extends AbstractDoor {\n    public constructor(public color: string){\n        super();\n    }\n\n    public setColor(color: string) {\n        this.color = color;\n    }\n}\n\nexport abstract class AbstractWindow {}\n\n\n// export abstract class AbstractCar {\n//     public abstract getEngine(): AbstractEngine|null;\n//     public abstract setEngine(engine: AbstractEngine): void;\n//     public abstract changeEngine(engine: AbstractEngine): void;\n// }\n\n\n// export class FamilyCar extends AbstractCar {\n//     private engine: AbstractEngine|null = null;\n//     private doors: FamilyCarDoor[] = [];\n\n//     public setEngine(engine: AbstractEngine): void {\n//         this.engine = engine;\n//     }\n//     public getEngine(): AbstractEngine|null {\n//         return this.engine;\n//     }\n//     public changeEngine(engine: AbstractEngine): void {\n//         this.engine = engine;\n//     }\n// }\n// export const instance = new FamilyCar(new DieselEngine(2000), [new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\") ,new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\")]);\n// instance.getEngine().revEngine();\n\n// instance.changeEngine(new HybridEngine(2000));\n// instance.getEngine().revEngine();\n\n// [Selecteer auto type] -> [Motor type] -> [Deur type]\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}