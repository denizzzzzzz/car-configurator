{"ast":null,"code":"export let EngineTypes = /*#__PURE__*/function (EngineTypes) {\n  EngineTypes[\"diesel\"] = \"Diesel\";\n  EngineTypes[\"petrol\"] = \"Petrol\";\n  EngineTypes[\"electric\"] = \"Electric\";\n  EngineTypes[\"hybric\"] = \"Hyrbrid\";\n  return EngineTypes;\n}({});\nexport let CarColorNormal = /*#__PURE__*/function (CarColorNormal) {\n  CarColorNormal[\"Black\"] = \"Black\";\n  CarColorNormal[\"Red\"] = \"Red\";\n  CarColorNormal[\"Blue\"] = \"Blue\";\n  return CarColorNormal;\n}({});\nexport let CarColorSports = /*#__PURE__*/function (CarColorSports) {\n  CarColorSports[\"Eureolin\"] = \"Eureolin\";\n  CarColorSports[\"PigmentGreen\"] = \"Pigment Green\";\n  return CarColorSports;\n}({});\nexport const colorMapNormal = {\n  // [CarColorNormal.IndianRed]: { name: \"Indian red\", hex: \"#F2545B\", color:\"white\"},\n  // [CarColorNormal.Gummental]: { name: \"Gummental\", hex: \"#19323C\", color:\"white\" },\n  // [CarColorNormal.MintCream]: { name: \"Mint cream\", hex: \"#F3F7F0\", color:\"black\" },\n  [CarColorNormal.Black]: {\n    name: \"Black\",\n    hex: \"Black\",\n    color: \"white\"\n  },\n  [CarColorNormal.Blue]: {\n    name: \"Blue\",\n    hex: \"Blue\",\n    color: \"White\"\n  },\n  [CarColorNormal.Red]: {\n    name: \"Red\",\n    hex: \"Red\",\n    color: \"white\"\n  }\n  // [CarColorNormal.Zaffre]: { name: \"Zaffre\", hex: \"#3626A7\", color:\"white\" },\n  // [CarColorNormal.NonPhotoBlue]: { name: \"Non Photo Blue\", hex: \"#9ED8DB\", color:\"black\" },\n  // [CarColorNormal.UclaBlue]: { name: \"UCLA Blue\", hex: \"#467599\", color:\"white\" },\n  // [CarColorNormal.Licorice]: { name: \"Licorice\", hex: \"#0D0106\", color:\"white\" },\n};\n\nexport const colorMapSports = {\n  [CarColorSports.Eureolin]: {\n    name: \"Eureolin\",\n    hex: \"Black\",\n    color: \"white\"\n  },\n  [CarColorSports.PigmentGreen]: {\n    name: \"Eureolin\",\n    hex: \"Blue\",\n    color: \"White\"\n  }\n};\nexport class AbstractEngine {\n  constructor() {\n    this.displacement = void 0;\n    this.engineType = void 0;\n  }\n}\n\n// public abstract revEngine(): void;\n\n// export class DieselEngine extends AbstractEngine {\n//     public engineType: EngineTypes = EngineTypes.diesel; \n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('GULP');\n// }\n\n// export class PetrolEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.PETROL;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n//     public revEngine(): void {\n//         console.log('Vroom');\n//     }\n// }\n\n// export class HybridEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('Zoof');\n// }\n// }\n\n// export class ElectricEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n// public revEngine(): void {\n//     console.log('...');\n// }\n\nexport class AbstractDoor {\n  constructor() {\n    this.color = void 0;\n  }\n}\nexport class FamilyCarDoor extends AbstractDoor {\n  constructor(color) {\n    super();\n    this.color = color;\n  }\n  setColor(color) {\n    this.color = color;\n  }\n}\nexport class AbstractWindow {}\nexport class AbstractCar {}\nexport class FamilyCar extends AbstractCar {\n  constructor() {\n    super(...arguments);\n    this.engine = null;\n    this.doors = [];\n  }\n  setEngine(engine) {\n    this.engine = engine;\n  }\n  getEngine() {\n    return this.engine;\n  }\n  changeEngine(engine) {\n    this.engine = engine;\n  }\n}\n// export const instance = new FamilyCar(new DieselEngine(2000), [new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\") ,new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\")]);\n// instance.getEngine().revEngine();\n\n// instance.changeEngine(new HybridEngine(2000));\n// instance.getEngine().revEngine();\n\n// [Selecteer auto type] -> [Motor type] -> [Deur type]","map":{"version":3,"names":["EngineTypes","CarColorNormal","CarColorSports","colorMapNormal","Black","name","hex","color","Blue","Red","colorMapSports","Eureolin","PigmentGreen","AbstractEngine","constructor","displacement","engineType","AbstractDoor","FamilyCarDoor","setColor","AbstractWindow","AbstractCar","FamilyCar","arguments","engine","doors","setEngine","getEngine","changeEngine"],"sources":["/Users/deniz/Desktop/Oefen projecten TS/autoconfigurator/car-configurator/src/models/index.ts"],"sourcesContent":["export enum EngineTypes {\n    diesel = \"Diesel\",\n    petrol = \"Petrol\",\n    electric = \"Electric\",\n    hybric =\"Hyrbrid\",\n}\nexport interface ColorInfo {\n    name: string;\n    hex: string;\n    color:string;\n  }\n  \n  export enum CarColorNormal {\n    // IndianRed = \"Indian red\",\n    // Gummental = \"Gummental\",\n    // MintCream = \"Mint cream\",\n   \n    // Zaffre = \"Zaffre\",\n    // NonPhotoBlue = \"Non Photo Blue\",\n    // UclaBlue = \"UCLA Blue\",\n    // Licorice = \"Licorice\",\n    Black = \"Black\", \n    Red = \"Red\",\n    Blue = \"Blue\",\n  }\n  export enum CarColorSports {\n    Eureolin = \"Eureolin\",\n    PigmentGreen = \"Pigment Green\"\n\n  }\n\n  export const colorMapNormal: Record<CarColorNormal, ColorInfo> = {\n    // [CarColorNormal.IndianRed]: { name: \"Indian red\", hex: \"#F2545B\", color:\"white\"},\n    // [CarColorNormal.Gummental]: { name: \"Gummental\", hex: \"#19323C\", color:\"white\" },\n    // [CarColorNormal.MintCream]: { name: \"Mint cream\", hex: \"#F3F7F0\", color:\"black\" },\n    [CarColorNormal.Black]: { name: \"Black\", hex: \"Black\", color:\"white\" },\n    [CarColorNormal.Blue]: { name: \"Blue\", hex: \"Blue\", color:\"White\" },\n    [CarColorNormal.Red]: { name: \"Red\", hex: \"Red\", color:\"white\" },\n    // [CarColorNormal.Zaffre]: { name: \"Zaffre\", hex: \"#3626A7\", color:\"white\" },\n    // [CarColorNormal.NonPhotoBlue]: { name: \"Non Photo Blue\", hex: \"#9ED8DB\", color:\"black\" },\n    // [CarColorNormal.UclaBlue]: { name: \"UCLA Blue\", hex: \"#467599\", color:\"white\" },\n    // [CarColorNormal.Licorice]: { name: \"Licorice\", hex: \"#0D0106\", color:\"white\" },\n  };\n  export const colorMapSports: Record<CarColorSports, ColorInfo> = {\n    [CarColorSports.Eureolin]: { name: \"Eureolin\", hex: \"Black\", color:\"white\" },\n    [CarColorSports.PigmentGreen]: { name: \"Eureolin\", hex: \"Blue\", color:\"White\" },\n    }\n\n  \nexport abstract class AbstractEngine {\n    public abstract displacement: number;\n    public abstract engineType: EngineTypes;\n}\n\n    // public abstract revEngine(): void;\n\n\n\n// export class DieselEngine extends AbstractEngine {\n//     public engineType: EngineTypes = EngineTypes.diesel; \n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('GULP');\n    // }\n\n\n// export class PetrolEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.PETROL;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n//     public revEngine(): void {\n//         console.log('Vroom');\n//     }\n// }\n\n// export class HybridEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('Zoof');\n    // }\n// }\n\n// export class ElectricEngine extends AbstractEngine {\n//     public fuelType: FuelType = FuelType.HYBRID;\n//     public constructor(public displacement: number) {\n//         super();\n//     }\n\n    // public revEngine(): void {\n    //     console.log('...');\n    // }\n\nexport abstract class AbstractDoor {\n    public abstract color: string;\n}\n\nexport class FamilyCarDoor extends AbstractDoor {\n    public constructor(public color: string){\n        super();\n    }\n\n    public setColor(color: string) {\n        this.color = color;\n    }\n}\n\nexport abstract class AbstractWindow {}\n\n\nexport abstract class AbstractCar {\n    public abstract getEngine(): AbstractEngine|null;\n    public abstract setEngine(engine: AbstractEngine): void;\n    public abstract changeEngine(engine: AbstractEngine): void;\n}\n\n\nexport class FamilyCar extends AbstractCar {\n    private engine: AbstractEngine|null = null;\n    private doors: FamilyCarDoor[] = [];\n\n    public setEngine(engine: AbstractEngine): void {\n        this.engine = engine;\n    }\n    public getEngine(): AbstractEngine|null {\n        return this.engine;\n    }\n    public changeEngine(engine: AbstractEngine): void {\n        this.engine = engine;\n    }\n}\n// export const instance = new FamilyCar(new DieselEngine(2000), [new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\") ,new FamilyCarDoor(\"red\"), new FamilyCarDoor(\"red\")]);\n// instance.getEngine().revEngine();\n\n// instance.changeEngine(new HybridEngine(2000));\n// instance.getEngine().revEngine();\n\n// [Selecteer auto type] -> [Motor type] -> [Deur type]\n"],"mappings":"AAAA,WAAYA,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAYrB,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAa1B,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAM1B,OAAO,MAAMC,cAAiD,GAAG;EAC/D;EACA;EACA;EACA,CAACF,cAAc,CAACG,KAAK,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAC;EAAQ,CAAC;EACtE,CAACN,cAAc,CAACO,IAAI,GAAG;IAAEH,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAC;EAAQ,CAAC;EACnE,CAACN,cAAc,CAACQ,GAAG,GAAG;IAAEJ,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IAAEC,KAAK,EAAC;EAAQ;EAC/D;EACA;EACA;EACA;AACF,CAAC;;AACD,OAAO,MAAMG,cAAiD,GAAG;EAC/D,CAACR,cAAc,CAACS,QAAQ,GAAG;IAAEN,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAC;EAAQ,CAAC;EAC5E,CAACL,cAAc,CAACU,YAAY,GAAG;IAAEP,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAC;EAAQ;AAC9E,CAAC;AAGL,OAAO,MAAeM,cAAc,CAAC;EAAAC,YAAA;IAAA,KACjBC,YAAY;IAAA,KACZC,UAAU;EAAA;AAC9B;;AAEI;;AAIJ;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;;AAEJ,OAAO,MAAeC,YAAY,CAAC;EAAAH,YAAA;IAAA,KACfP,KAAK;EAAA;AACzB;AAEA,OAAO,MAAMW,aAAa,SAASD,YAAY,CAAC;EACrCH,WAAWA,CAAQP,KAAa,EAAC;IACpC,KAAK,CAAC,CAAC;IAAC,KADcA,KAAa,GAAbA,KAAa;EAEvC;EAEOY,QAAQA,CAACZ,KAAa,EAAE;IAC3B,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;AACJ;AAEA,OAAO,MAAea,cAAc,CAAC;AAGrC,OAAO,MAAeC,WAAW,CAAC;AAOlC,OAAO,MAAMC,SAAS,SAASD,WAAW,CAAC;EAAAP,YAAA;IAAA,SAAAS,SAAA;IAAA,KAC/BC,MAAM,GAAwB,IAAI;IAAA,KAClCC,KAAK,GAAoB,EAAE;EAAA;EAE5BC,SAASA,CAACF,MAAsB,EAAQ;IAC3C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACOG,SAASA,CAAA,EAAwB;IACpC,OAAO,IAAI,CAACH,MAAM;EACtB;EACOI,YAAYA,CAACJ,MAAsB,EAAQ;IAC9C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;AACJ;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}